
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.role == "admin";
    }

    function isManager() {
      return isAuth() && request.auth.token.role == "manager";
    }

    function isCadet() {
      return isAuth() && request.auth.token.role == "cadet";
    }

    // USERS
    match /users/{userId} {
      // Admins and managers can read any user profile
      // Users can read their own profile
      allow read: if isAdmin() || isManager() || isUser(userId);
      // Admins can update any profile (e.g., to approve)
      // Users can update their own profile
      allow update: if isAdmin() || isUser(userId);
      // Creation/deletion is handled server-side
      allow create, delete: if false;
    }

    // CAMPS
    match /camps/{campId} {
      allow create, update, delete: if isAdmin();
      allow read: if isAuth(); // Any authenticated user can read camp info
    }

    // CAMP REGISTRATIONS
    match /camp_registrations/{regId} {
      allow create: if isCadet();
      // Admins/Managers can read all registrations. Cadets can read their own.
      allow read: if isAdmin() || isManager() || (isCadet() && request.auth.uid == resource.data.cadetId);
      allow delete: if isAdmin();
    }

    // ATTENDANCE
    match /attendance/{dateId} {
        allow read: if isAdmin() || isManager();
        allow write: if isAdmin();
    }
    
    match /attendance/{dateId}/records/{userId} {
      allow read: if isAdmin() || isManager() || isUser(userId);
      allow create, update: if isAdmin();
    }
  }
}
