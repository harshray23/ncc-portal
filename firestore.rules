rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }
    
    function isRole(role) {
      return isAuth() && request.auth.token.role == role;
    }

    function isAdmin() {
      return isRole('admin');
    }

    function isManager() {
      return isRole('manager');
    }
    
    function isCadet() {
      return isRole('cadet');
    }

    match /users/{userId} {
      // Creating users is handled by a secure server action.
      allow create: if false; 

      // Admins and managers can read all user documents.
      // A cadet can only read their own document.
      allow read: if isAdmin() || isManager() || (isAuth() && request.auth.uid == userId);
      
      // Admins can update any user document (e.g., for approval).
      // A cadet can only update their own document.
      allow update: if isAdmin() || (isAuth() && request.auth.uid == userId);

      // No one can delete user documents from the client.
      allow delete: if false;
    }
    
    // CAMPS
    match /camps/{campId} {
      allow create, update, delete: if isAdmin();
      allow read: if isAuth(); // Any authenticated user can read camp details.
    }

    // CAMP REGISTRATIONS
    match /camp_registrations/{regId} {
      allow create: if isCadet();
      // Admins/managers can read all registrations.
      // A cadet can read their own registration.
      allow read: if isAdmin() || isManager() || (isCadet() && request.auth.uid == resource.data.cadetId);
      allow delete: if isAdmin();
    }

    // ATTENDANCE
    match /attendance/{dateId} {
       allow create, update: if isAdmin();
       allow read: if isAdmin() || isManager();
    }

    match /attendance/{dateId}/records/{userId} {
      // Admins/managers can read all attendance records.
      // A cadet can only read their own record.
      allow read: if isAdmin() || isManager() || (isAuth() && request.auth.uid == userId);
      allow create, update: if isAdmin();
    }
  }
}
