
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAdmin() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    function isManager() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "manager";
    }

    function isCadet() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "cadet";
    }

    // USERS
    match /users/{userId} {
      // Admins and Managers can read any user's data. Cadets can only read their own.
      allow read: if isAdmin() || isManager() || request.auth.uid == userId;
      // Cadets can update their own data. Admins can update any data.
      allow update: if isAdmin() || request.auth.uid == userId;
      // Anyone can create a user for registration.
      allow create: if true;
      // Nobody can delete users from the client.
      allow delete: if false;
    }

    // CAMPS
    match /camps/{campId} {
      allow create, update, delete: if isAdmin();
      allow read: if isAdmin() || isManager() || isCadet();
    }

    // CAMP REGISTRATIONS
    match /camp_registrations/{regId} {
      allow create: if isCadet();
      // Admins/Managers can read all. Cadets can read their own registration.
      allow read: if isAdmin() || isManager() || (isCadet() && request.auth.uid == resource.data.cadetId);
      allow delete: if isAdmin();
    }

    // ATTENDANCE
    match /attendance/{dateId} {
      allow read: if isAdmin() || isManager();
      allow create, update: if isAdmin();
        
      match /records/{userId} {
        allow read: if isAdmin() || isManager() || request.auth.uid == userId;
        allow create, update: if isAdmin();
      }
    }
  }
}
