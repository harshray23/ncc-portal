rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles from their document in the 'users' collection.
    function isRole(role) {
      // Ensure the user is authenticated before trying to read their role.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    function isAdmin() {
      return isRole("admin");
    }
    function isManager() {
      return isRole("manager");
    }

    // A user can read their own data.
    // An admin or manager can read any user's data.
    // An admin can update any user's data.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin() || isManager();
      allow update: if request.auth.uid == userId || isAdmin();
      // Disallow client-side creation and deletion. This is handled by secure server actions.
      allow create, delete: if false;
    }

    // Camps can be managed by admins, but read by any authenticated user.
    match /camps/{campId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isAdmin();
    }

    // Camp registrations can be created by the user themselves.
    // They can be read by admins, managers, or the user who created it.
    // They can only be deleted by an admin.
    match /camp_registrations/{regId} {
      allow create: if request.auth.uid == request.resource.data.cadetId;
      allow read: if isAdmin() || isManager() || request.auth.uid == resource.data.cadetId;
      allow delete: if isAdmin();
    }
    
    // Attendance can be written by admins and read by admins or managers.
    // A user can only read their own attendance record.
    match /attendance/{dateId} {
      allow write: if isAdmin();
      match /records/{userId} {
         allow read: if request.auth.uid == userId || isAdmin() || isManager();
         // Only admins can create/update attendance records
         allow write: if isAdmin();
      }
    }
  }
}
